// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations.Internal
{
    [DbContext(typeof(InternalDbContext))]
    partial class InternalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Aggregates.CachedCurrenciesAggregate.CachedCurrencies", b =>
                {
                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_updated_at");

                    b.Property<string>("BaseCurrency")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("base_currency");

                    b.HasKey("LastUpdatedAt", "BaseCurrency")
                        .HasName("pk_currencies_on_date");

                    b.ToTable("currencies_on_date", "cur");
                });

            modelBuilder.Entity("Domain.Aggregates.CachedCurrenciesAggregate.CachedCurrencies", b =>
                {
                    b.OwnsMany("Domain.Aggregates.CurrencyAggregate.Currency", "Currencies", b1 =>
                        {
                            b1.Property<DateTime>("LastUpdatedAt")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("last_updated_at");

                            b1.Property<string>("BaseCurrency")
                                .HasColumnType("character varying(8)")
                                .HasColumnName("base_currency");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasColumnName("id");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Code")
                                .IsRequired()
                                .HasMaxLength(8)
                                .HasColumnType("character varying(8)")
                                .HasColumnName("currency");

                            b1.Property<decimal>("Value")
                                .HasColumnType("numeric")
                                .HasColumnName("exchange_rate");

                            b1.HasKey("LastUpdatedAt", "BaseCurrency", "Id")
                                .HasName("pk_currency");

                            b1.HasIndex("Code")
                                .HasDatabaseName("ix_currency_code");

                            b1.ToTable("currency", "cur");

                            b1.WithOwner()
                                .HasForeignKey("LastUpdatedAt", "BaseCurrency")
                                .HasConstraintName("fk_currency_currencies_on_date_cached_currencies_temp_id");
                        });

                    b.Navigation("Currencies");
                });
#pragma warning restore 612, 618
        }
    }
}
