// <auto-generated />
using Infrastructure.Public.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Public.Migrations
{
    [DbContext(typeof(UserDbContext))]
    partial class UserDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("user")
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Aggregates.CachedFavoriteCurrency", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("name");

                    b.Property<string>("BaseCurrency")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("base_currency");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("currency");

                    b.HasKey("Name")
                        .HasName("pk_favorite_currencies");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_favorite_currencies_name");

                    b.HasIndex("Currency", "BaseCurrency")
                        .IsUnique()
                        .HasDatabaseName("ix_favorite_currencies_currency_base_currency");

                    b.ToTable("favorite_currencies", "user", t =>
                        {
                            t.HasCheckConstraint("CK_favorite_currencies_base_currency_MinLength", "LENGTH(base_currency) >= 3");

                            t.HasCheckConstraint("CK_favorite_currencies_currency_MinLength", "LENGTH(currency) >= 3");

                            t.HasCheckConstraint("CK_favorite_currencies_name_MinLength", "LENGTH(name) >= 1");
                        });
                });

            modelBuilder.Entity("Domain.Aggregates.CachedSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrencyRoundCount")
                        .HasColumnType("integer")
                        .HasColumnName("currency_round_count");

                    b.Property<string>("DefaultCurrency")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("default_currency");

                    b.HasKey("Id")
                        .HasName("pk_settings");

                    b.ToTable("settings", "user", t =>
                        {
                            t.HasCheckConstraint("CK_settings_currency_round_count_Range", "currency_round_count >= 0 AND currency_round_count <= 10");

                            t.HasCheckConstraint("CK_settings_default_currency_MinLength", "LENGTH(default_currency) >= 3");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
